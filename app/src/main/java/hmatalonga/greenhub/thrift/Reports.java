/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package hmatalonga.greenhub.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2016-03-24")
public class Reports implements org.apache.thrift.TBase<Reports, Reports._Fields>, java.io.Serializable, Cloneable, Comparable<Reports> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Reports");

  private static final org.apache.thrift.protocol.TField J_SCORE_FIELD_DESC = new org.apache.thrift.protocol.TField("jScore", org.apache.thrift.protocol.TType.DOUBLE, (short)1);
  private static final org.apache.thrift.protocol.TField OS_FIELD_DESC = new org.apache.thrift.protocol.TField("os", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField OS_WITHOUT_FIELD_DESC = new org.apache.thrift.protocol.TField("osWithout", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField MODEL_FIELD_DESC = new org.apache.thrift.protocol.TField("model", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField MODEL_WITHOUT_FIELD_DESC = new org.apache.thrift.protocol.TField("modelWithout", org.apache.thrift.protocol.TType.STRUCT, (short)5);
  private static final org.apache.thrift.protocol.TField SIMILAR_APPS_FIELD_DESC = new org.apache.thrift.protocol.TField("similarApps", org.apache.thrift.protocol.TType.STRUCT, (short)6);
  private static final org.apache.thrift.protocol.TField SIMILAR_APPS_WITHOUT_FIELD_DESC = new org.apache.thrift.protocol.TField("similarAppsWithout", org.apache.thrift.protocol.TType.STRUCT, (short)7);
  private static final org.apache.thrift.protocol.TField CHANGE_SINCE_LAST_WEEK_FIELD_DESC = new org.apache.thrift.protocol.TField("changeSinceLastWeek", org.apache.thrift.protocol.TType.DOUBLE, (short)8);
  private static final org.apache.thrift.protocol.TField CHANGE_SINCE_LAST_WEEK_PERCENTAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("changeSinceLastWeekPercentage", org.apache.thrift.protocol.TType.DOUBLE, (short)9);
  private static final org.apache.thrift.protocol.TField J_SCORE_WITH_FIELD_DESC = new org.apache.thrift.protocol.TField("jScoreWith", org.apache.thrift.protocol.TType.STRUCT, (short)10);
  private static final org.apache.thrift.protocol.TField J_SCORE_WITHOUT_FIELD_DESC = new org.apache.thrift.protocol.TField("jScoreWithout", org.apache.thrift.protocol.TType.STRUCT, (short)11);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ReportsStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ReportsTupleSchemeFactory());
  }

  public double jScore; // optional
  public DetailScreenReport os; // optional
  public DetailScreenReport osWithout; // optional
  public DetailScreenReport model; // optional
  public DetailScreenReport modelWithout; // optional
  public DetailScreenReport similarApps; // optional
  public DetailScreenReport similarAppsWithout; // optional
  public double changeSinceLastWeek; // optional
  public double changeSinceLastWeekPercentage; // optional
  public DetailScreenReport jScoreWith; // optional
  public DetailScreenReport jScoreWithout; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    J_SCORE((short)1, "jScore"),
    OS((short)2, "os"),
    OS_WITHOUT((short)3, "osWithout"),
    MODEL((short)4, "model"),
    MODEL_WITHOUT((short)5, "modelWithout"),
    SIMILAR_APPS((short)6, "similarApps"),
    SIMILAR_APPS_WITHOUT((short)7, "similarAppsWithout"),
    CHANGE_SINCE_LAST_WEEK((short)8, "changeSinceLastWeek"),
    CHANGE_SINCE_LAST_WEEK_PERCENTAGE((short)9, "changeSinceLastWeekPercentage"),
    J_SCORE_WITH((short)10, "jScoreWith"),
    J_SCORE_WITHOUT((short)11, "jScoreWithout");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // J_SCORE
          return J_SCORE;
        case 2: // OS
          return OS;
        case 3: // OS_WITHOUT
          return OS_WITHOUT;
        case 4: // MODEL
          return MODEL;
        case 5: // MODEL_WITHOUT
          return MODEL_WITHOUT;
        case 6: // SIMILAR_APPS
          return SIMILAR_APPS;
        case 7: // SIMILAR_APPS_WITHOUT
          return SIMILAR_APPS_WITHOUT;
        case 8: // CHANGE_SINCE_LAST_WEEK
          return CHANGE_SINCE_LAST_WEEK;
        case 9: // CHANGE_SINCE_LAST_WEEK_PERCENTAGE
          return CHANGE_SINCE_LAST_WEEK_PERCENTAGE;
        case 10: // J_SCORE_WITH
          return J_SCORE_WITH;
        case 11: // J_SCORE_WITHOUT
          return J_SCORE_WITHOUT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __JSCORE_ISSET_ID = 0;
  private static final int __CHANGESINCELASTWEEK_ISSET_ID = 1;
  private static final int __CHANGESINCELASTWEEKPERCENTAGE_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.J_SCORE,_Fields.OS,_Fields.OS_WITHOUT,_Fields.MODEL,_Fields.MODEL_WITHOUT,_Fields.SIMILAR_APPS,_Fields.SIMILAR_APPS_WITHOUT,_Fields.CHANGE_SINCE_LAST_WEEK,_Fields.CHANGE_SINCE_LAST_WEEK_PERCENTAGE,_Fields.J_SCORE_WITH,_Fields.J_SCORE_WITHOUT};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.J_SCORE, new org.apache.thrift.meta_data.FieldMetaData("jScore", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.OS, new org.apache.thrift.meta_data.FieldMetaData("os", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DetailScreenReport.class)));
    tmpMap.put(_Fields.OS_WITHOUT, new org.apache.thrift.meta_data.FieldMetaData("osWithout", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DetailScreenReport.class)));
    tmpMap.put(_Fields.MODEL, new org.apache.thrift.meta_data.FieldMetaData("model", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DetailScreenReport.class)));
    tmpMap.put(_Fields.MODEL_WITHOUT, new org.apache.thrift.meta_data.FieldMetaData("modelWithout", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DetailScreenReport.class)));
    tmpMap.put(_Fields.SIMILAR_APPS, new org.apache.thrift.meta_data.FieldMetaData("similarApps", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DetailScreenReport.class)));
    tmpMap.put(_Fields.SIMILAR_APPS_WITHOUT, new org.apache.thrift.meta_data.FieldMetaData("similarAppsWithout", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DetailScreenReport.class)));
    tmpMap.put(_Fields.CHANGE_SINCE_LAST_WEEK, new org.apache.thrift.meta_data.FieldMetaData("changeSinceLastWeek", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.CHANGE_SINCE_LAST_WEEK_PERCENTAGE, new org.apache.thrift.meta_data.FieldMetaData("changeSinceLastWeekPercentage", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.J_SCORE_WITH, new org.apache.thrift.meta_data.FieldMetaData("jScoreWith", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DetailScreenReport.class)));
    tmpMap.put(_Fields.J_SCORE_WITHOUT, new org.apache.thrift.meta_data.FieldMetaData("jScoreWithout", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DetailScreenReport.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Reports.class, metaDataMap);
  }

  public Reports() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Reports(Reports other) {
    __isset_bitfield = other.__isset_bitfield;
    this.jScore = other.jScore;
    if (other.isSetOs()) {
      this.os = new DetailScreenReport(other.os);
    }
    if (other.isSetOsWithout()) {
      this.osWithout = new DetailScreenReport(other.osWithout);
    }
    if (other.isSetModel()) {
      this.model = new DetailScreenReport(other.model);
    }
    if (other.isSetModelWithout()) {
      this.modelWithout = new DetailScreenReport(other.modelWithout);
    }
    if (other.isSetSimilarApps()) {
      this.similarApps = new DetailScreenReport(other.similarApps);
    }
    if (other.isSetSimilarAppsWithout()) {
      this.similarAppsWithout = new DetailScreenReport(other.similarAppsWithout);
    }
    this.changeSinceLastWeek = other.changeSinceLastWeek;
    this.changeSinceLastWeekPercentage = other.changeSinceLastWeekPercentage;
    if (other.isSetJScoreWith()) {
      this.jScoreWith = new DetailScreenReport(other.jScoreWith);
    }
    if (other.isSetJScoreWithout()) {
      this.jScoreWithout = new DetailScreenReport(other.jScoreWithout);
    }
  }

  public Reports deepCopy() {
    return new Reports(this);
  }

  @Override
  public void clear() {
    setJScoreIsSet(false);
    this.jScore = 0.0;
    this.os = null;
    this.osWithout = null;
    this.model = null;
    this.modelWithout = null;
    this.similarApps = null;
    this.similarAppsWithout = null;
    setChangeSinceLastWeekIsSet(false);
    this.changeSinceLastWeek = 0.0;
    setChangeSinceLastWeekPercentageIsSet(false);
    this.changeSinceLastWeekPercentage = 0.0;
    this.jScoreWith = null;
    this.jScoreWithout = null;
  }

  public double getJScore() {
    return this.jScore;
  }

  public Reports setJScore(double jScore) {
    this.jScore = jScore;
    setJScoreIsSet(true);
    return this;
  }

  public void unsetJScore() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __JSCORE_ISSET_ID);
  }

  /** Returns true if field jScore is set (has been assigned a value) and false otherwise */
  public boolean isSetJScore() {
    return EncodingUtils.testBit(__isset_bitfield, __JSCORE_ISSET_ID);
  }

  public void setJScoreIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __JSCORE_ISSET_ID, value);
  }

  public DetailScreenReport getOs() {
    return this.os;
  }

  public Reports setOs(DetailScreenReport os) {
    this.os = os;
    return this;
  }

  public void unsetOs() {
    this.os = null;
  }

  /** Returns true if field os is set (has been assigned a value) and false otherwise */
  public boolean isSetOs() {
    return this.os != null;
  }

  public void setOsIsSet(boolean value) {
    if (!value) {
      this.os = null;
    }
  }

  public DetailScreenReport getOsWithout() {
    return this.osWithout;
  }

  public Reports setOsWithout(DetailScreenReport osWithout) {
    this.osWithout = osWithout;
    return this;
  }

  public void unsetOsWithout() {
    this.osWithout = null;
  }

  /** Returns true if field osWithout is set (has been assigned a value) and false otherwise */
  public boolean isSetOsWithout() {
    return this.osWithout != null;
  }

  public void setOsWithoutIsSet(boolean value) {
    if (!value) {
      this.osWithout = null;
    }
  }

  public DetailScreenReport getModel() {
    return this.model;
  }

  public Reports setModel(DetailScreenReport model) {
    this.model = model;
    return this;
  }

  public void unsetModel() {
    this.model = null;
  }

  /** Returns true if field model is set (has been assigned a value) and false otherwise */
  public boolean isSetModel() {
    return this.model != null;
  }

  public void setModelIsSet(boolean value) {
    if (!value) {
      this.model = null;
    }
  }

  public DetailScreenReport getModelWithout() {
    return this.modelWithout;
  }

  public Reports setModelWithout(DetailScreenReport modelWithout) {
    this.modelWithout = modelWithout;
    return this;
  }

  public void unsetModelWithout() {
    this.modelWithout = null;
  }

  /** Returns true if field modelWithout is set (has been assigned a value) and false otherwise */
  public boolean isSetModelWithout() {
    return this.modelWithout != null;
  }

  public void setModelWithoutIsSet(boolean value) {
    if (!value) {
      this.modelWithout = null;
    }
  }

  public DetailScreenReport getSimilarApps() {
    return this.similarApps;
  }

  public Reports setSimilarApps(DetailScreenReport similarApps) {
    this.similarApps = similarApps;
    return this;
  }

  public void unsetSimilarApps() {
    this.similarApps = null;
  }

  /** Returns true if field similarApps is set (has been assigned a value) and false otherwise */
  public boolean isSetSimilarApps() {
    return this.similarApps != null;
  }

  public void setSimilarAppsIsSet(boolean value) {
    if (!value) {
      this.similarApps = null;
    }
  }

  public DetailScreenReport getSimilarAppsWithout() {
    return this.similarAppsWithout;
  }

  public Reports setSimilarAppsWithout(DetailScreenReport similarAppsWithout) {
    this.similarAppsWithout = similarAppsWithout;
    return this;
  }

  public void unsetSimilarAppsWithout() {
    this.similarAppsWithout = null;
  }

  /** Returns true if field similarAppsWithout is set (has been assigned a value) and false otherwise */
  public boolean isSetSimilarAppsWithout() {
    return this.similarAppsWithout != null;
  }

  public void setSimilarAppsWithoutIsSet(boolean value) {
    if (!value) {
      this.similarAppsWithout = null;
    }
  }

  public double getChangeSinceLastWeek() {
    return this.changeSinceLastWeek;
  }

  public Reports setChangeSinceLastWeek(double changeSinceLastWeek) {
    this.changeSinceLastWeek = changeSinceLastWeek;
    setChangeSinceLastWeekIsSet(true);
    return this;
  }

  public void unsetChangeSinceLastWeek() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CHANGESINCELASTWEEK_ISSET_ID);
  }

  /** Returns true if field changeSinceLastWeek is set (has been assigned a value) and false otherwise */
  public boolean isSetChangeSinceLastWeek() {
    return EncodingUtils.testBit(__isset_bitfield, __CHANGESINCELASTWEEK_ISSET_ID);
  }

  public void setChangeSinceLastWeekIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CHANGESINCELASTWEEK_ISSET_ID, value);
  }

  public double getChangeSinceLastWeekPercentage() {
    return this.changeSinceLastWeekPercentage;
  }

  public Reports setChangeSinceLastWeekPercentage(double changeSinceLastWeekPercentage) {
    this.changeSinceLastWeekPercentage = changeSinceLastWeekPercentage;
    setChangeSinceLastWeekPercentageIsSet(true);
    return this;
  }

  public void unsetChangeSinceLastWeekPercentage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CHANGESINCELASTWEEKPERCENTAGE_ISSET_ID);
  }

  /** Returns true if field changeSinceLastWeekPercentage is set (has been assigned a value) and false otherwise */
  public boolean isSetChangeSinceLastWeekPercentage() {
    return EncodingUtils.testBit(__isset_bitfield, __CHANGESINCELASTWEEKPERCENTAGE_ISSET_ID);
  }

  public void setChangeSinceLastWeekPercentageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CHANGESINCELASTWEEKPERCENTAGE_ISSET_ID, value);
  }

  public DetailScreenReport getJScoreWith() {
    return this.jScoreWith;
  }

  public Reports setJScoreWith(DetailScreenReport jScoreWith) {
    this.jScoreWith = jScoreWith;
    return this;
  }

  public void unsetJScoreWith() {
    this.jScoreWith = null;
  }

  /** Returns true if field jScoreWith is set (has been assigned a value) and false otherwise */
  public boolean isSetJScoreWith() {
    return this.jScoreWith != null;
  }

  public void setJScoreWithIsSet(boolean value) {
    if (!value) {
      this.jScoreWith = null;
    }
  }

  public DetailScreenReport getJScoreWithout() {
    return this.jScoreWithout;
  }

  public Reports setJScoreWithout(DetailScreenReport jScoreWithout) {
    this.jScoreWithout = jScoreWithout;
    return this;
  }

  public void unsetJScoreWithout() {
    this.jScoreWithout = null;
  }

  /** Returns true if field jScoreWithout is set (has been assigned a value) and false otherwise */
  public boolean isSetJScoreWithout() {
    return this.jScoreWithout != null;
  }

  public void setJScoreWithoutIsSet(boolean value) {
    if (!value) {
      this.jScoreWithout = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case J_SCORE:
      if (value == null) {
        unsetJScore();
      } else {
        setJScore((Double)value);
      }
      break;

    case OS:
      if (value == null) {
        unsetOs();
      } else {
        setOs((DetailScreenReport)value);
      }
      break;

    case OS_WITHOUT:
      if (value == null) {
        unsetOsWithout();
      } else {
        setOsWithout((DetailScreenReport)value);
      }
      break;

    case MODEL:
      if (value == null) {
        unsetModel();
      } else {
        setModel((DetailScreenReport)value);
      }
      break;

    case MODEL_WITHOUT:
      if (value == null) {
        unsetModelWithout();
      } else {
        setModelWithout((DetailScreenReport)value);
      }
      break;

    case SIMILAR_APPS:
      if (value == null) {
        unsetSimilarApps();
      } else {
        setSimilarApps((DetailScreenReport)value);
      }
      break;

    case SIMILAR_APPS_WITHOUT:
      if (value == null) {
        unsetSimilarAppsWithout();
      } else {
        setSimilarAppsWithout((DetailScreenReport)value);
      }
      break;

    case CHANGE_SINCE_LAST_WEEK:
      if (value == null) {
        unsetChangeSinceLastWeek();
      } else {
        setChangeSinceLastWeek((Double)value);
      }
      break;

    case CHANGE_SINCE_LAST_WEEK_PERCENTAGE:
      if (value == null) {
        unsetChangeSinceLastWeekPercentage();
      } else {
        setChangeSinceLastWeekPercentage((Double)value);
      }
      break;

    case J_SCORE_WITH:
      if (value == null) {
        unsetJScoreWith();
      } else {
        setJScoreWith((DetailScreenReport)value);
      }
      break;

    case J_SCORE_WITHOUT:
      if (value == null) {
        unsetJScoreWithout();
      } else {
        setJScoreWithout((DetailScreenReport)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case J_SCORE:
      return getJScore();

    case OS:
      return getOs();

    case OS_WITHOUT:
      return getOsWithout();

    case MODEL:
      return getModel();

    case MODEL_WITHOUT:
      return getModelWithout();

    case SIMILAR_APPS:
      return getSimilarApps();

    case SIMILAR_APPS_WITHOUT:
      return getSimilarAppsWithout();

    case CHANGE_SINCE_LAST_WEEK:
      return getChangeSinceLastWeek();

    case CHANGE_SINCE_LAST_WEEK_PERCENTAGE:
      return getChangeSinceLastWeekPercentage();

    case J_SCORE_WITH:
      return getJScoreWith();

    case J_SCORE_WITHOUT:
      return getJScoreWithout();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case J_SCORE:
      return isSetJScore();
    case OS:
      return isSetOs();
    case OS_WITHOUT:
      return isSetOsWithout();
    case MODEL:
      return isSetModel();
    case MODEL_WITHOUT:
      return isSetModelWithout();
    case SIMILAR_APPS:
      return isSetSimilarApps();
    case SIMILAR_APPS_WITHOUT:
      return isSetSimilarAppsWithout();
    case CHANGE_SINCE_LAST_WEEK:
      return isSetChangeSinceLastWeek();
    case CHANGE_SINCE_LAST_WEEK_PERCENTAGE:
      return isSetChangeSinceLastWeekPercentage();
    case J_SCORE_WITH:
      return isSetJScoreWith();
    case J_SCORE_WITHOUT:
      return isSetJScoreWithout();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Reports)
      return this.equals((Reports)that);
    return false;
  }

  public boolean equals(Reports that) {
    if (that == null)
      return false;

    boolean this_present_jScore = true && this.isSetJScore();
    boolean that_present_jScore = true && that.isSetJScore();
    if (this_present_jScore || that_present_jScore) {
      if (!(this_present_jScore && that_present_jScore))
        return false;
      if (this.jScore != that.jScore)
        return false;
    }

    boolean this_present_os = true && this.isSetOs();
    boolean that_present_os = true && that.isSetOs();
    if (this_present_os || that_present_os) {
      if (!(this_present_os && that_present_os))
        return false;
      if (!this.os.equals(that.os))
        return false;
    }

    boolean this_present_osWithout = true && this.isSetOsWithout();
    boolean that_present_osWithout = true && that.isSetOsWithout();
    if (this_present_osWithout || that_present_osWithout) {
      if (!(this_present_osWithout && that_present_osWithout))
        return false;
      if (!this.osWithout.equals(that.osWithout))
        return false;
    }

    boolean this_present_model = true && this.isSetModel();
    boolean that_present_model = true && that.isSetModel();
    if (this_present_model || that_present_model) {
      if (!(this_present_model && that_present_model))
        return false;
      if (!this.model.equals(that.model))
        return false;
    }

    boolean this_present_modelWithout = true && this.isSetModelWithout();
    boolean that_present_modelWithout = true && that.isSetModelWithout();
    if (this_present_modelWithout || that_present_modelWithout) {
      if (!(this_present_modelWithout && that_present_modelWithout))
        return false;
      if (!this.modelWithout.equals(that.modelWithout))
        return false;
    }

    boolean this_present_similarApps = true && this.isSetSimilarApps();
    boolean that_present_similarApps = true && that.isSetSimilarApps();
    if (this_present_similarApps || that_present_similarApps) {
      if (!(this_present_similarApps && that_present_similarApps))
        return false;
      if (!this.similarApps.equals(that.similarApps))
        return false;
    }

    boolean this_present_similarAppsWithout = true && this.isSetSimilarAppsWithout();
    boolean that_present_similarAppsWithout = true && that.isSetSimilarAppsWithout();
    if (this_present_similarAppsWithout || that_present_similarAppsWithout) {
      if (!(this_present_similarAppsWithout && that_present_similarAppsWithout))
        return false;
      if (!this.similarAppsWithout.equals(that.similarAppsWithout))
        return false;
    }

    boolean this_present_changeSinceLastWeek = true && this.isSetChangeSinceLastWeek();
    boolean that_present_changeSinceLastWeek = true && that.isSetChangeSinceLastWeek();
    if (this_present_changeSinceLastWeek || that_present_changeSinceLastWeek) {
      if (!(this_present_changeSinceLastWeek && that_present_changeSinceLastWeek))
        return false;
      if (this.changeSinceLastWeek != that.changeSinceLastWeek)
        return false;
    }

    boolean this_present_changeSinceLastWeekPercentage = true && this.isSetChangeSinceLastWeekPercentage();
    boolean that_present_changeSinceLastWeekPercentage = true && that.isSetChangeSinceLastWeekPercentage();
    if (this_present_changeSinceLastWeekPercentage || that_present_changeSinceLastWeekPercentage) {
      if (!(this_present_changeSinceLastWeekPercentage && that_present_changeSinceLastWeekPercentage))
        return false;
      if (this.changeSinceLastWeekPercentage != that.changeSinceLastWeekPercentage)
        return false;
    }

    boolean this_present_jScoreWith = true && this.isSetJScoreWith();
    boolean that_present_jScoreWith = true && that.isSetJScoreWith();
    if (this_present_jScoreWith || that_present_jScoreWith) {
      if (!(this_present_jScoreWith && that_present_jScoreWith))
        return false;
      if (!this.jScoreWith.equals(that.jScoreWith))
        return false;
    }

    boolean this_present_jScoreWithout = true && this.isSetJScoreWithout();
    boolean that_present_jScoreWithout = true && that.isSetJScoreWithout();
    if (this_present_jScoreWithout || that_present_jScoreWithout) {
      if (!(this_present_jScoreWithout && that_present_jScoreWithout))
        return false;
      if (!this.jScoreWithout.equals(that.jScoreWithout))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_jScore = true && (isSetJScore());
    list.add(present_jScore);
    if (present_jScore)
      list.add(jScore);

    boolean present_os = true && (isSetOs());
    list.add(present_os);
    if (present_os)
      list.add(os);

    boolean present_osWithout = true && (isSetOsWithout());
    list.add(present_osWithout);
    if (present_osWithout)
      list.add(osWithout);

    boolean present_model = true && (isSetModel());
    list.add(present_model);
    if (present_model)
      list.add(model);

    boolean present_modelWithout = true && (isSetModelWithout());
    list.add(present_modelWithout);
    if (present_modelWithout)
      list.add(modelWithout);

    boolean present_similarApps = true && (isSetSimilarApps());
    list.add(present_similarApps);
    if (present_similarApps)
      list.add(similarApps);

    boolean present_similarAppsWithout = true && (isSetSimilarAppsWithout());
    list.add(present_similarAppsWithout);
    if (present_similarAppsWithout)
      list.add(similarAppsWithout);

    boolean present_changeSinceLastWeek = true && (isSetChangeSinceLastWeek());
    list.add(present_changeSinceLastWeek);
    if (present_changeSinceLastWeek)
      list.add(changeSinceLastWeek);

    boolean present_changeSinceLastWeekPercentage = true && (isSetChangeSinceLastWeekPercentage());
    list.add(present_changeSinceLastWeekPercentage);
    if (present_changeSinceLastWeekPercentage)
      list.add(changeSinceLastWeekPercentage);

    boolean present_jScoreWith = true && (isSetJScoreWith());
    list.add(present_jScoreWith);
    if (present_jScoreWith)
      list.add(jScoreWith);

    boolean present_jScoreWithout = true && (isSetJScoreWithout());
    list.add(present_jScoreWithout);
    if (present_jScoreWithout)
      list.add(jScoreWithout);

    return list.hashCode();
  }

  @Override
  public int compareTo(Reports other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetJScore()).compareTo(other.isSetJScore());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJScore()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jScore, other.jScore);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOs()).compareTo(other.isSetOs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.os, other.os);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOsWithout()).compareTo(other.isSetOsWithout());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOsWithout()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.osWithout, other.osWithout);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetModel()).compareTo(other.isSetModel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetModel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.model, other.model);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetModelWithout()).compareTo(other.isSetModelWithout());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetModelWithout()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.modelWithout, other.modelWithout);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSimilarApps()).compareTo(other.isSetSimilarApps());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSimilarApps()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.similarApps, other.similarApps);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSimilarAppsWithout()).compareTo(other.isSetSimilarAppsWithout());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSimilarAppsWithout()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.similarAppsWithout, other.similarAppsWithout);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChangeSinceLastWeek()).compareTo(other.isSetChangeSinceLastWeek());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChangeSinceLastWeek()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.changeSinceLastWeek, other.changeSinceLastWeek);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChangeSinceLastWeekPercentage()).compareTo(other.isSetChangeSinceLastWeekPercentage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChangeSinceLastWeekPercentage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.changeSinceLastWeekPercentage, other.changeSinceLastWeekPercentage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJScoreWith()).compareTo(other.isSetJScoreWith());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJScoreWith()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jScoreWith, other.jScoreWith);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJScoreWithout()).compareTo(other.isSetJScoreWithout());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJScoreWithout()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jScoreWithout, other.jScoreWithout);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Reports(");
    boolean first = true;

    if (isSetJScore()) {
      sb.append("jScore:");
      sb.append(this.jScore);
      first = false;
    }
    if (isSetOs()) {
      if (!first) sb.append(", ");
      sb.append("os:");
      if (this.os == null) {
        sb.append("null");
      } else {
        sb.append(this.os);
      }
      first = false;
    }
    if (isSetOsWithout()) {
      if (!first) sb.append(", ");
      sb.append("osWithout:");
      if (this.osWithout == null) {
        sb.append("null");
      } else {
        sb.append(this.osWithout);
      }
      first = false;
    }
    if (isSetModel()) {
      if (!first) sb.append(", ");
      sb.append("model:");
      if (this.model == null) {
        sb.append("null");
      } else {
        sb.append(this.model);
      }
      first = false;
    }
    if (isSetModelWithout()) {
      if (!first) sb.append(", ");
      sb.append("modelWithout:");
      if (this.modelWithout == null) {
        sb.append("null");
      } else {
        sb.append(this.modelWithout);
      }
      first = false;
    }
    if (isSetSimilarApps()) {
      if (!first) sb.append(", ");
      sb.append("similarApps:");
      if (this.similarApps == null) {
        sb.append("null");
      } else {
        sb.append(this.similarApps);
      }
      first = false;
    }
    if (isSetSimilarAppsWithout()) {
      if (!first) sb.append(", ");
      sb.append("similarAppsWithout:");
      if (this.similarAppsWithout == null) {
        sb.append("null");
      } else {
        sb.append(this.similarAppsWithout);
      }
      first = false;
    }
    if (isSetChangeSinceLastWeek()) {
      if (!first) sb.append(", ");
      sb.append("changeSinceLastWeek:");
      sb.append(this.changeSinceLastWeek);
      first = false;
    }
    if (isSetChangeSinceLastWeekPercentage()) {
      if (!first) sb.append(", ");
      sb.append("changeSinceLastWeekPercentage:");
      sb.append(this.changeSinceLastWeekPercentage);
      first = false;
    }
    if (isSetJScoreWith()) {
      if (!first) sb.append(", ");
      sb.append("jScoreWith:");
      if (this.jScoreWith == null) {
        sb.append("null");
      } else {
        sb.append(this.jScoreWith);
      }
      first = false;
    }
    if (isSetJScoreWithout()) {
      if (!first) sb.append(", ");
      sb.append("jScoreWithout:");
      if (this.jScoreWithout == null) {
        sb.append("null");
      } else {
        sb.append(this.jScoreWithout);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (os != null) {
      os.validate();
    }
    if (osWithout != null) {
      osWithout.validate();
    }
    if (model != null) {
      model.validate();
    }
    if (modelWithout != null) {
      modelWithout.validate();
    }
    if (similarApps != null) {
      similarApps.validate();
    }
    if (similarAppsWithout != null) {
      similarAppsWithout.validate();
    }
    if (jScoreWith != null) {
      jScoreWith.validate();
    }
    if (jScoreWithout != null) {
      jScoreWithout.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ReportsStandardSchemeFactory implements SchemeFactory {
    public ReportsStandardScheme getScheme() {
      return new ReportsStandardScheme();
    }
  }

  private static class ReportsStandardScheme extends StandardScheme<Reports> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Reports struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // J_SCORE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.jScore = iprot.readDouble();
              struct.setJScoreIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // OS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.os = new DetailScreenReport();
              struct.os.read(iprot);
              struct.setOsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // OS_WITHOUT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.osWithout = new DetailScreenReport();
              struct.osWithout.read(iprot);
              struct.setOsWithoutIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MODEL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.model = new DetailScreenReport();
              struct.model.read(iprot);
              struct.setModelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // MODEL_WITHOUT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.modelWithout = new DetailScreenReport();
              struct.modelWithout.read(iprot);
              struct.setModelWithoutIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // SIMILAR_APPS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.similarApps = new DetailScreenReport();
              struct.similarApps.read(iprot);
              struct.setSimilarAppsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SIMILAR_APPS_WITHOUT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.similarAppsWithout = new DetailScreenReport();
              struct.similarAppsWithout.read(iprot);
              struct.setSimilarAppsWithoutIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CHANGE_SINCE_LAST_WEEK
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.changeSinceLastWeek = iprot.readDouble();
              struct.setChangeSinceLastWeekIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CHANGE_SINCE_LAST_WEEK_PERCENTAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.changeSinceLastWeekPercentage = iprot.readDouble();
              struct.setChangeSinceLastWeekPercentageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // J_SCORE_WITH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.jScoreWith = new DetailScreenReport();
              struct.jScoreWith.read(iprot);
              struct.setJScoreWithIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // J_SCORE_WITHOUT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.jScoreWithout = new DetailScreenReport();
              struct.jScoreWithout.read(iprot);
              struct.setJScoreWithoutIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Reports struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetJScore()) {
        oprot.writeFieldBegin(J_SCORE_FIELD_DESC);
        oprot.writeDouble(struct.jScore);
        oprot.writeFieldEnd();
      }
      if (struct.os != null) {
        if (struct.isSetOs()) {
          oprot.writeFieldBegin(OS_FIELD_DESC);
          struct.os.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.osWithout != null) {
        if (struct.isSetOsWithout()) {
          oprot.writeFieldBegin(OS_WITHOUT_FIELD_DESC);
          struct.osWithout.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.model != null) {
        if (struct.isSetModel()) {
          oprot.writeFieldBegin(MODEL_FIELD_DESC);
          struct.model.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.modelWithout != null) {
        if (struct.isSetModelWithout()) {
          oprot.writeFieldBegin(MODEL_WITHOUT_FIELD_DESC);
          struct.modelWithout.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.similarApps != null) {
        if (struct.isSetSimilarApps()) {
          oprot.writeFieldBegin(SIMILAR_APPS_FIELD_DESC);
          struct.similarApps.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.similarAppsWithout != null) {
        if (struct.isSetSimilarAppsWithout()) {
          oprot.writeFieldBegin(SIMILAR_APPS_WITHOUT_FIELD_DESC);
          struct.similarAppsWithout.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetChangeSinceLastWeek()) {
        oprot.writeFieldBegin(CHANGE_SINCE_LAST_WEEK_FIELD_DESC);
        oprot.writeDouble(struct.changeSinceLastWeek);
        oprot.writeFieldEnd();
      }
      if (struct.isSetChangeSinceLastWeekPercentage()) {
        oprot.writeFieldBegin(CHANGE_SINCE_LAST_WEEK_PERCENTAGE_FIELD_DESC);
        oprot.writeDouble(struct.changeSinceLastWeekPercentage);
        oprot.writeFieldEnd();
      }
      if (struct.jScoreWith != null) {
        if (struct.isSetJScoreWith()) {
          oprot.writeFieldBegin(J_SCORE_WITH_FIELD_DESC);
          struct.jScoreWith.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.jScoreWithout != null) {
        if (struct.isSetJScoreWithout()) {
          oprot.writeFieldBegin(J_SCORE_WITHOUT_FIELD_DESC);
          struct.jScoreWithout.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ReportsTupleSchemeFactory implements SchemeFactory {
    public ReportsTupleScheme getScheme() {
      return new ReportsTupleScheme();
    }
  }

  private static class ReportsTupleScheme extends TupleScheme<Reports> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Reports struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetJScore()) {
        optionals.set(0);
      }
      if (struct.isSetOs()) {
        optionals.set(1);
      }
      if (struct.isSetOsWithout()) {
        optionals.set(2);
      }
      if (struct.isSetModel()) {
        optionals.set(3);
      }
      if (struct.isSetModelWithout()) {
        optionals.set(4);
      }
      if (struct.isSetSimilarApps()) {
        optionals.set(5);
      }
      if (struct.isSetSimilarAppsWithout()) {
        optionals.set(6);
      }
      if (struct.isSetChangeSinceLastWeek()) {
        optionals.set(7);
      }
      if (struct.isSetChangeSinceLastWeekPercentage()) {
        optionals.set(8);
      }
      if (struct.isSetJScoreWith()) {
        optionals.set(9);
      }
      if (struct.isSetJScoreWithout()) {
        optionals.set(10);
      }
      oprot.writeBitSet(optionals, 11);
      if (struct.isSetJScore()) {
        oprot.writeDouble(struct.jScore);
      }
      if (struct.isSetOs()) {
        struct.os.write(oprot);
      }
      if (struct.isSetOsWithout()) {
        struct.osWithout.write(oprot);
      }
      if (struct.isSetModel()) {
        struct.model.write(oprot);
      }
      if (struct.isSetModelWithout()) {
        struct.modelWithout.write(oprot);
      }
      if (struct.isSetSimilarApps()) {
        struct.similarApps.write(oprot);
      }
      if (struct.isSetSimilarAppsWithout()) {
        struct.similarAppsWithout.write(oprot);
      }
      if (struct.isSetChangeSinceLastWeek()) {
        oprot.writeDouble(struct.changeSinceLastWeek);
      }
      if (struct.isSetChangeSinceLastWeekPercentage()) {
        oprot.writeDouble(struct.changeSinceLastWeekPercentage);
      }
      if (struct.isSetJScoreWith()) {
        struct.jScoreWith.write(oprot);
      }
      if (struct.isSetJScoreWithout()) {
        struct.jScoreWithout.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Reports struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(11);
      if (incoming.get(0)) {
        struct.jScore = iprot.readDouble();
        struct.setJScoreIsSet(true);
      }
      if (incoming.get(1)) {
        struct.os = new DetailScreenReport();
        struct.os.read(iprot);
        struct.setOsIsSet(true);
      }
      if (incoming.get(2)) {
        struct.osWithout = new DetailScreenReport();
        struct.osWithout.read(iprot);
        struct.setOsWithoutIsSet(true);
      }
      if (incoming.get(3)) {
        struct.model = new DetailScreenReport();
        struct.model.read(iprot);
        struct.setModelIsSet(true);
      }
      if (incoming.get(4)) {
        struct.modelWithout = new DetailScreenReport();
        struct.modelWithout.read(iprot);
        struct.setModelWithoutIsSet(true);
      }
      if (incoming.get(5)) {
        struct.similarApps = new DetailScreenReport();
        struct.similarApps.read(iprot);
        struct.setSimilarAppsIsSet(true);
      }
      if (incoming.get(6)) {
        struct.similarAppsWithout = new DetailScreenReport();
        struct.similarAppsWithout.read(iprot);
        struct.setSimilarAppsWithoutIsSet(true);
      }
      if (incoming.get(7)) {
        struct.changeSinceLastWeek = iprot.readDouble();
        struct.setChangeSinceLastWeekIsSet(true);
      }
      if (incoming.get(8)) {
        struct.changeSinceLastWeekPercentage = iprot.readDouble();
        struct.setChangeSinceLastWeekPercentageIsSet(true);
      }
      if (incoming.get(9)) {
        struct.jScoreWith = new DetailScreenReport();
        struct.jScoreWith.read(iprot);
        struct.setJScoreWithIsSet(true);
      }
      if (incoming.get(10)) {
        struct.jScoreWithout = new DetailScreenReport();
        struct.jScoreWithout.read(iprot);
        struct.setJScoreWithoutIsSet(true);
      }
    }
  }

}

